{"version":3,"sources":["components/Content.module.css","UI/SearchForm.module.css","components/Header.module.css","components/WeatherWidget/ErrorMessage.module.css","components/WeatherWidget/WeatherCard.module.css","components/WeatherWidget/openWeatherMapApi.js","components/WeatherWidget/ErrorMessage.js","components/WeatherWidget/textMessages.js","components/WeatherWidget/weatherIconsIndex.js","components/WeatherWidget/WeatherCard.js","components/Content.js","UI/DataList/DataList.js","UI/SearchForm.js","components/Header.js","App.js","index.js"],"names":["module","exports","getWeatherData","url","a","fetch","weatherData","json","jsonData","error","getCityWeatherData","city","countryCode","data","getCityForecastWeatherData","getCitiesList","queryString","cod","list","map","item","name","country","sys","CityError","props","errorMessage","className","classes","container","weatherDescriptons","Clear","Clouds","Rain","Snow","Extreme","Drizzle","Thunderstorm","Haze","Mist","Smoke","Dust","Sand","Ash","Fog","Tornado","Squall","weatherIconsIndex","WeatherCard","useState","selectedCard","setSelectedCard","setWeatherData","weatherForecastData","setWeatherForecastData","useEffect","getData","split","preparedCity","trim","currentWeatherData","count","cleanedWeatherData","weather","description","main","temperature","Math","round","temp","feelsLike","feels_like","humidity","message","iconIndex","icon","dayTimeMarker","at","currentForecastData","cleanedForecastData","forecast","forEach","date","Date","dt","timezone","hours","getHours","minutes","getMinutes","forecastItem","time","push","content","cardlets","cardBackgroundClass","idx","onClick","cardNumber","style","transform","marginRight","degree","card","class","Content","weatherCity","Datalist","dataHandler","cssClass","placeholder","required","inputRef","dataList","setDataList","listInputHandler","e","target","value","optionsData","cityData","appliedClasses","onInput","ref","id","console","log","SearchForm","searchBoxRef","useRef","onSubmit","preventDefault","current","Header","onSearchWeather","App","setCity","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b57b4167.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content-container\":\"Content_content-container__CmgwM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-form\":\"SearchForm_search-form__39hjn\",\"search-input\":\"SearchForm_search-input__KG8gd\",\"search-button\":\"SearchForm_search-button__2-_FL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header-container\":\"Header_header-container__h5Zto\",\"app-title\":\"Header_app-title__21sYm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ErrorMessage_container__3DVNo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"WeatherCard_card__2iaKF\",\"default-background\":\"WeatherCard_default-background__7btLr\",\"Clear-day-background\":\"WeatherCard_Clear-day-background__1WPlv\",\"Clear-night-background\":\"WeatherCard_Clear-night-background__2Bqf9\",\"Clouds-day-background\":\"WeatherCard_Clouds-day-background__3mIMS\",\"Clouds-night-background\":\"WeatherCard_Clouds-night-background__1Hq2t\",\"Rain-day-background\":\"WeatherCard_Rain-day-background__3WHzs\",\"Rain-night-background\":\"WeatherCard_Rain-night-background__3c6C4\",\"Thunderstorm-day-background\":\"WeatherCard_Thunderstorm-day-background__odm4j\",\"Thunderstorm-night-background\":\"WeatherCard_Thunderstorm-night-background__3OcY4\",\"Drizzle-day-background\":\"WeatherCard_Drizzle-day-background__3yhWb\",\"Drizzle-night-background\":\"WeatherCard_Drizzle-night-background__upVnt\",\"Haze-day-background\":\"WeatherCard_Haze-day-background__20XyI\",\"Haze-night-background\":\"WeatherCard_Haze-night-background__KupLf\",\"card-content\":\"WeatherCard_card-content__3Secg\",\"card-title\":\"WeatherCard_card-title__3c2j3\",\"weather-info\":\"WeatherCard_weather-info__3j-Ra\",\"weather-info-group\":\"WeatherCard_weather-info-group__3LwsB\",\"weather-message-title\":\"WeatherCard_weather-message-title__3mu1D\",\"humidity\":\"WeatherCard_humidity__3enKC\",\"weather-message\":\"WeatherCard_weather-message__1uZTV\",\"temperature-data-container\":\"WeatherCard_temperature-data-container__34M1W\",\"degrees-container\":\"WeatherCard_degrees-container__2nviL\",\"temperature\":\"WeatherCard_temperature__m-o5K\",\"degree\":\"WeatherCard_degree__139uh\",\"temperature-details\":\"WeatherCard_temperature-details__2KSkm\",\"hourly-cards-container\":\"WeatherCard_hourly-cards-container__3GKsm\",\"forecast-card\":\"WeatherCard_forecast-card__1um9y\",\"forecast-card-0\":\"WeatherCard_forecast-card-0__2tZa9\",\"forecast-card-1\":\"WeatherCard_forecast-card-1__12863\",\"forecast-card-2\":\"WeatherCard_forecast-card-2__TmQHl\",\"forecast-card-3\":\"WeatherCard_forecast-card-3__37v1i\",\"forecast-card-selected\":\"WeatherCard_forecast-card-selected__25HGh\"};","const getWeatherData = async (url) => {\r\n  try {\r\n    const weatherData = await fetch(url);\r\n    const jsonData = await weatherData.json();\r\n    return jsonData;\r\n  } catch (error) {\r\n    return { error: error };\r\n  }\r\n};\r\n\r\nexport const getCityWeatherData = async (city, countryCode = \"\") => {\r\n  const data = await getWeatherData(\r\n    `https://api.openweathermap.org/data/2.5/find?q=${city},${countryCode}&appid=da2408219dbf3c8b89c5d76887ef3d01&units=metric`\r\n  );\r\n  return data;\r\n};\r\n\r\nexport const getCityForecastWeatherData = async (city) => {\r\n  const data = await getWeatherData(\r\n    `https://api.openweathermap.org/data/2.5/forecast?q=${city}&cnt=4&appid=da2408219dbf3c8b89c5d76887ef3d01&units=metric`\r\n  );\r\n  return data;\r\n};\r\n\r\nexport const getCitiesList = async (queryString) => {\r\n  const data = await getWeatherData(\r\n    `https://api.openweathermap.org/data/2.5/find?q=${queryString}&appid=da2408219dbf3c8b89c5d76887ef3d01`\r\n  );\r\n  if (data.error || data.cod === \"400\") return [];\r\n  return data.list.map((item) => ({\r\n    name: item.name,\r\n    country: item.sys.country,\r\n  }));\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./ErrorMessage.module.css\"\r\n\r\nconst CityError = (props) => {\r\n  const { errorMessage } = props;\r\n  return (\r\n    <div className={classes.container}>\r\n      <h2>{errorMessage}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CityError;\r\n","export const weatherDescriptons = {\r\n  Clear: \"Clear sky. Good weather for a walk!\",\r\n  Clouds: \"Cloudy today... Don't let that stand in your way!\",\r\n  Rain: \"Don't forget your umbrella!\",\r\n  Snow: \"It is snowing. Be careful out here!\",\r\n  Extreme: \"Danger! Please don't go outside!\",\r\n  Drizzle: \"If your going outside, bring your coat and your sunny smile!\",\r\n  Thunderstorm: \"Oh dear! Better get snuggled in!\",\r\n  Haze: \"Everyting's a bit hazy, these days!\",\r\n  Mist: \"Increase your attention, especially on roads!\",\r\n  Smoke: \"Keep an eye for dangerous conditions!\",\r\n  Dust: \"It gets everywhere!\",\r\n  Sand: \"Dust's mean big brother!\",\r\n  Ash: \"Nature unleashed. Better stay out of the way\",\r\n  Fog: \"Be careful if you're driving or crosing the road!\",\r\n  Tornado: \"Please seek shelter immediately!\",\r\n  Squall: \"Just stay inside for now!,\",\r\n};\r\n","export const weatherIconsIndex = {\r\n  \"01d\": \"wi wi-day-sunny\",\r\n  \"01n\": \"wi wi-night-clear\",\r\n  \"02d\": \"wi wi-day-cloudy\",\r\n  \"02n\": \"wi wi-night-alt-cloudy\",\r\n  \"03d\": \"wi wi-cloudy\",\r\n  \"03n\": \"wi wi-cloudy\",\r\n  \"04d\": \"wi wi-cloudy\",\r\n  \"04n\": \"wi wi-cloudy\",\r\n  \"09d\": \"wi wi-rain\",\r\n  \"09n\": \"wi wi-rain\",\r\n  \"10d\": \"wi wi-day-rain\",\r\n  \"10n\": \"wi wi-night-alt-rain\",\r\n  \"11d\": \"wi wi-day-thunderstorm\",\r\n  \"11n\": \"wi wi-night-alt-thunderstorm\",\r\n  \"13d\": \"wi wi-day-snow\",\r\n  \"13n\": \"wi wi-night-alt-snow\",\r\n  \"50d\": \"wi wi-day-fog\",\r\n  \"50n\": \"wi wi-night-fog\",\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport classes from \"./WeatherCard.module.css\";\r\nimport \"./icons/css/weather-icons.css\";\r\nimport {\r\n  getCityForecastWeatherData,\r\n  getCityWeatherData,\r\n} from \"./openWeatherMapApi\";\r\nimport CityError from \"./ErrorMessage\";\r\nimport { weatherDescriptons } from \"./textMessages\";\r\nimport { weatherIconsIndex } from \"./weatherIconsIndex\";\r\n\r\nconst WeatherCard = (props) => {\r\n  const { city } = props;\r\n  const [selectedCard, setSelectedCard] = useState(0);\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [weatherForecastData, setWeatherForecastData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      let [preparedCity, country] = city.split(\",\");\r\n\r\n      if (preparedCity) preparedCity = preparedCity.trim();\r\n      if (country) country = country.trim();\r\n      const currentWeatherData = await getCityWeatherData(\r\n        preparedCity,\r\n        country\r\n      );\r\n\r\n      //if no data, set errors,  return\r\n      if (\r\n        currentWeatherData.cod === \"400\" ||\r\n        !currentWeatherData.count ||\r\n        currentWeatherData.error\r\n      ) {\r\n        setWeatherData({ ...currentWeatherData });\r\n        return;\r\n      }\r\n\r\n      const cleanedWeatherData = {\r\n        city: {\r\n          name: currentWeatherData.list[0].name,\r\n          country: currentWeatherData.list[0].sys.country,\r\n        },\r\n\r\n        weather: {\r\n          description: currentWeatherData.list[0].weather[0].main,\r\n          temperature: Math.round(+currentWeatherData.list[0].main.temp),\r\n          feelsLike: Math.round(+currentWeatherData.list[0].main.feels_like),\r\n          humidity: currentWeatherData.list[0].main.humidity,\r\n          message:\r\n            weatherDescriptons[currentWeatherData.list[0].weather[0].main],\r\n          iconIndex: currentWeatherData.list[0].weather[0].icon,\r\n          dayTimeMarker:\r\n            currentWeatherData.list[0].weather[0].icon.at(-1) === \"d\"\r\n              ? \"day\"\r\n              : \"night\",\r\n        },\r\n      };\r\n\r\n      setWeatherData({ ...cleanedWeatherData });\r\n      if (currentWeatherData.count && currentWeatherData.count > 0) {\r\n        const currentForecastData = await getCityForecastWeatherData(city);\r\n\r\n        const cleanedForecastData = {\r\n          city: {\r\n            name: currentForecastData.city.name,\r\n            country: currentForecastData.city.country,\r\n          },\r\n          forecast: [],\r\n        };\r\n        currentForecastData.list.forEach((forecast) => {\r\n          const date = new Date(\r\n            (forecast.dt + currentForecastData.city.timezone) * 1000\r\n          );\r\n          let hours = date.getHours();\r\n          let minutes = date.getMinutes();\r\n\r\n          if (hours < 10) hours = \"0\" + hours;\r\n          if (minutes < 10) minutes = \"0\" + minutes;\r\n\r\n          const forecastItem = {\r\n            time: `${hours}:${minutes}`,\r\n            description: forecast.weather[0].main,\r\n            temperature: Math.round(forecast.main.temp),\r\n            feelsLike: Math.round(forecast.main.feels_like),\r\n            humidity: forecast.main.humidity,\r\n            message: weatherDescriptons[forecast.weather[0].main],\r\n            iconIndex: forecast.weather[0].icon,\r\n            dayTimeMarker:\r\n              forecast.weather[0].icon.at(-1) === \"d\" ? \"day\" : \"night\",\r\n          };\r\n          cleanedForecastData.forecast.push(forecastItem);\r\n        });\r\n        //cleanedForecastData.forecast[0] = cleanedWeatherData.weather;\r\n        setWeatherForecastData({ ...cleanedForecastData });\r\n      }\r\n    };\r\n    getData();\r\n  }, [city]);\r\n\r\n  const cardClickHandler = (cardNumber) => {\r\n    setSelectedCard(cardNumber);\r\n    setWeatherData({\r\n      ...weatherData,\r\n      weather: { ...weatherForecastData.forecast[cardNumber] },\r\n    });\r\n  };\r\n  let content = null;\r\n  let cardlets = null;\r\n\r\n  if (!weatherData) return null;\r\n  //if api call returns a catch block error:\r\n  if (weatherData.error)\r\n    return (content = <CityError errorMessage={`Sorry, Network error`} />);\r\n\r\n  //if bad query\r\n  if (weatherData.cod === \"400\")\r\n    return (content = <CityError errorMessage=\"Weather server error!\" />);\r\n\r\n  //if no cities found\r\n  if (weatherData.count === 0)\r\n    return (content = <CityError errorMessage=\"Sorry, city not found!\" />);\r\n\r\n  const cardBackgroundClass = `${weatherData.weather.description}-${weatherData.weather.dayTimeMarker}-background`;\r\n\r\n  if (weatherForecastData) {\r\n    cardlets = weatherForecastData.forecast.map((forecast, idx) => (\r\n      <div\r\n        key={idx}\r\n        className={`${classes[\"forecast-card\"]} ${\r\n          selectedCard === idx\r\n            ? classes[\"forecast-card-selected\"]\r\n            : classes[`forecast-card-${idx}`]\r\n        }`}\r\n        onClick={() => {\r\n          cardClickHandler(idx);\r\n        }}\r\n      >\r\n        <span>{forecast.time}</span>\r\n        <div>\r\n          <i\r\n            className={weatherIconsIndex[forecast.iconIndex]}\r\n            style={{ transform: \"scale(2)\", marginRight: \"1rem\" }}\r\n          ></i>\r\n          <span>{forecast.temperature}</span>\r\n        </div>\r\n        <span>{forecast.description}</span>\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  content = (\r\n    <div className={classes[\"card-content\"]}>\r\n      <h1\r\n        className={classes[\"card-title\"]}\r\n      >{`${weatherData.city.name}, ${weatherData.city.country}`}</h1>\r\n      <div className={classes[\"weather-info\"]}>\r\n        <div className={classes[\"weather-info-group\"]}>\r\n          <i\r\n            className={weatherIconsIndex[weatherData.weather.iconIndex]}\r\n            style={{ transform: \"scale(3)\" }}\r\n          ></i>\r\n          <h3 className={classes[\"weather-message-title\"]}>\r\n            {weatherData.weather.description}\r\n          </h3>\r\n\r\n          <p className={classes[\"weather-message\"]}>\r\n            {weatherData.weather.message}\r\n          </p>\r\n        </div>\r\n        <div className={classes[\"temperature-data-container\"]}>\r\n          <div className={classes[\"degrees-container\"]}>\r\n            <p className={classes.temperature}>\r\n              {weatherData.weather.temperature}\r\n            </p>\r\n            <span className={classes.degree}> &#176;C</span>\r\n          </div>\r\n          <span className={classes[\"temperature-details\"]}>\r\n            Feels Like {weatherData.weather.feelsLike} &#176;C\r\n          </span>\r\n          <span className={classes[\"temperature-details\"]}>\r\n            Humidity: {weatherData.weather.humidity}%\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className={classes[\"hourly-cards-container\"]}>{cardlets}</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={`${classes.card}\r\n      ${classes[\"default-background\"]} ${classes[cardBackgroundClass]} ${\r\n        props.class ? props.class : \"\"\r\n      }`}\r\n    >\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React from \"react\";\r\nimport WeatherCard from \"../components/WeatherWidget/WeatherCard\";\r\nimport classes from \"./Content.module.css\";\r\n\r\nconst Content = ({ weatherCity }) => {\r\n  return (\r\n    <div className={classes[\"content-container\"]}>\r\n      <div className={classes[\"sidebar-container\"]}></div>\r\n      <div className={classes[\"weather-container\"]}>\r\n        <h1>Weather</h1>\r\n        <WeatherCard city={weatherCity} />\r\n      </div>\r\n      <div className={classes[\"news-container\"]}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Datalist = ({\r\n  dataHandler,\r\n  cssClass,\r\n  placeholder,\r\n  required,\r\n  inputRef,\r\n}) => {\r\n  const [dataList, setDataList] = useState(null);\r\n\r\n  const listInputHandler = async (e) => {\r\n    const optionsData = await dataHandler(e.target.value);\r\n    setDataList(\r\n      optionsData.map((item, idx) => {\r\n        const cityData = `${item.name},${item.country}`;\r\n        return (\r\n          <option\r\n            key={idx}\r\n          >\r\n            {cityData}\r\n          </option>\r\n        );\r\n      })\r\n    );\r\n  };\r\n  const appliedClasses = `${cssClass}`;\r\n  return (\r\n    <div>\r\n      <input\r\n        className={appliedClasses}\r\n        list=\"options\"\r\n        onInput={listInputHandler}\r\n        placeholder={placeholder}\r\n        required={required}\r\n        ref={inputRef}\r\n      />\r\n      <datalist id=\"options\" onClick={() => {console.log(\"clicked\");}}>{dataList}</datalist>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Datalist;\r\n","import React, { useRef } from \"react\";\r\nimport classes from \"./SearchForm.module.css\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport Datalist from \"./DataList/DataList\";\r\nimport { getCitiesList } from \"../components/WeatherWidget/openWeatherMapApi\";\r\n\r\nconst SearchForm = (props) => {\r\n  const searchBoxRef = useRef();\r\n  return (\r\n    <form\r\n      className={classes[\"search-form\"]}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        props.onSubmit(searchBoxRef.current.value.trim());\r\n      }}\r\n    >\r\n      {/* <input\r\n        className={classes[\"search-input\"]}\r\n        type=\"text\"\r\n        placeholder=\"Enter a city...\"\r\n        ref={searchBoxRef}\r\n        required\r\n      ></input> */}\r\n      <Datalist\r\n        cssClass={classes[\"search-input\"]}\r\n        placeholder=\"Enter a city...\"\r\n        required\r\n        inputRef={searchBoxRef}\r\n        dataHandler={getCitiesList}\r\n      />\r\n      <button className={classes[\"search-button\"]}>\r\n        <SearchIcon />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\nimport SearchForm from \"../UI/SearchForm\";\r\nimport classes from \"./Header.module.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={classes[\"header-container\"]}>\r\n      <h1 className={classes[\"app-title\"]}>Weather</h1>\r\n\r\n      <SearchForm onSubmit={props.onSearchWeather} />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Content from \"./components/Content\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  const [city, setCity] = useState(\"London\");\n  const searchWeatherHandler = (city) => {\n    setCity(city);\n  };\n  return (\n    <div className=\"App\">\n      <Header onSearchWeather={searchWeatherHandler} />\n      <Content weatherCity={city} />\n    </div>\n  );\n}\n\nexport default App;\n","import '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}